ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5)
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -34.05, y = -118.20), color="red", size=5, alpha=.5)
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -118, y = 34.05), color="red", size=5, alpha=.5)
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + + geom_point(data = UCLA, aes(x = -118, y = 34), color="red", size=5, alpha=.5)
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + geom_point(data = UCLA, aes(x = -118, y = 34), color="red", size=5, alpha=.5)
p <- plot_ly(x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar")
p
ggplot(df, aes(high_estimate, low_estimate, color = display_name))
+ geom_point() facet_grid(cols=vars(display_name))  theme(legend.position="none")
ggplot(df, aes(high_estimate, low_estimate, color = display_name)) + geom_point() facet_grid(cols=vars(display_name))  theme(legend.position="none")
ggplot(df, aes(high_estimate, low_estimate, color = display_name))
+ geom_point() facet_grid(cols=vars(display_name))  theme(legend.position="none")
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + geom_point(data = UCLA, aes(x = -118, y = 34, shape = factor(cyl)), color="red", size=5, alpha=.5)
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + geom_point(data = UCLA, aes(x = -118, y = 34, shape = 23), color="red", size=5, alpha=.5)
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + geom_point(data = UCLA, aes(x = -118, y = 34), shape = 23, color="red", size=5, alpha=.5)
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + geom_point(data = UCLA, aes(x = -118, y = 34), shape = 17, color="red", size=5, alpha=.5)
ggplot(df, aes(high_estimate, low_estimate, color = display_name)) +
+     geom_point() +
+     facet_grid(cols=vars(display_name)) +   #facet into columns
+     #facet_grid(. ~ manufacturer) +, #same as above
+     #facet_grid(rows=vars(manufacturer)) +   #facet into rows
+     #facet_grid(manufacturer ~ .) +  #same as above
+     #facet_wrap(~ manufacturer) +  #wrap facets
+     theme(legend.position="none")
ggplot(df, aes(high_estimate, display_name, color = low_estimate)) +
geom_point() +
facet_grid(cols=vars(low_estimate)) +   #facet into columns
#facet_grid(. ~ manufacturer) +, #same as above
#facet_grid(rows=vars(manufacturer)) +   #facet into rows
#facet_grid(manufacturer ~ .) +  #same as above
#facet_wrap(~ manufacturer) +  #wrap facets
theme(legend.position="none")
ggplot(df, aes(high_estimate, low_estimate , color = display_name)) +
geom_point() +
facet_grid(cols=vars(display_name)) +   #facet into columns
#facet_grid(. ~ manufacturer) +, #same as above
#facet_grid(rows=vars(manufacturer)) +   #facet into rows
#facet_grid(manufacturer ~ .) +  #same as above
#facet_wrap(~ manufacturer) +  #wrap facets
theme(legend.position="none")
ggplot(df, aes(high_estimate, low_estimate , color = display_name)) +
geom_point() +
facet_grid(cols=vars(display_name)) +   #facet into columns
#facet_grid(. ~ manufacturer) +, #same as above
#facet_grid(rows=vars(manufacturer)) +   #facet into rows
#facet_grid(manufacturer ~ .) +  #same as above
#facet_wrap(~ manufacturer) +  #wrap facets
theme(legend.position="none")
knitr::opts_chunk$set(echo = TRUE)
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
df
mydata
#Scatter Plot
ggplot(df, aes(display_name, high_estimate)) + geom_point()
#text
ggplot(df, aes(display_name, high_estimate)) + geom_text(aes(label = estimate))
#bar chart
ggplot(df, aes(display_name,high_estimate)) + geom_bar(stat = "identity")  #count of models by manufacturer (rows)
#Line Chart
ggplot(economics, aes(date, unemploy)) + geom_line()
#Area Chart
ggplot(economics, aes(date, unemploy)) + geom_area()
#Dot Plot
ggplot(df, aes(x = high_estimate)) + geom_dotplot(binwidth = 1)
#Histogram
ggplot(df, aes(x = high_estimate)) + geom_histogram(binwidth = 1)
#Frequency Polygon
ggplot(df, aes(x = high_estimate)) + geom_freqpoly(color = "blue")
#Box Plot
ggplot(mydata, aes(ï..name, estimate)) + geom_boxplot()
#Violin Plot
ggplot(mydata, aes(ï..name, estimate)) + geom_violin()
ggplot(df, aes(high_estimate, low_estimate , color = display_name)) +
geom_point() +
facet_grid(cols=vars(display_name)) +   #facet into columns
#facet_grid(. ~ manufacturer) +, #same as above
#facet_grid(rows=vars(manufacturer)) +   #facet into rows
#facet_grid(manufacturer ~ .) +  #same as above
#facet_wrap(~ manufacturer) +  #wrap facets
theme(legend.position="none")
# GGMAP
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + geom_point(data = UCLA, aes(x = -118, y = 34), shape = 17, color="red", size=5, alpha=.5)
p <- plot_ly(x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar")
p
#Scatter Plot
ggplot(df, aes(display_name, high_estimate)) + geom_point()
mydata
mydata[[1]]
mydata[[3]]
data[[1]] <- as.Date(data[[1]])
mydata[[1]] <- as.Date(mydata[[1]])
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
df
mydata
#Line Chart
ggplot(mydata, aes(as.Date(date), estimate)) + geom_line()
#Line Chart
ggplot(mydata, aes(date, estimate)) + geom_line()
#Line Chart
ggplot(mydata, aes(as.Date(date), estimate)) + geom_line()
#Line Chart
ggplot(mydata, aes(AsDate(date), estimate)) + geom_line()
#Line Chart
library(lubridate)
install.packages("lubridate")
#Line Chart
library(lubridate)
ggplot(mydata, aes(AsDate(date), estimate)) + geom_line()
#Line Chart
ggplot(mydata, aes(as.Date(date), estimate)) + geom_line()
#Area Chart
ggplot(df, aes(date, estimate)) + geom_area()
#Area Chart
ggplot(df, aes(asDate(date), estimate)) + geom_area()
#Area Chart
ggplot(df, aes(date, estimate)) + geom_area()
#Box Plot
ggplot(mydata, aes(name, estimate)) + geom_boxplot()
#Violin Plot
ggplot(mydata, aes(name, estimate)) + geom_violin()
ggplot(df, aes(high_estimate, low_estimate , color = display_name)) +
geom_point() +
facet_grid(cols=vars(display_name))+
theme(legend.position="none")
p <- plot_ly(x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar"),ylab = "Waiting time to next eruption (min)")
p <- plot_ly(x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar",ylab = "lol")
p
p <- plot_ly(ylab = "lol", x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar")
p
p <- plot_ly( x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar")
p
p <- plot_ly( x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar")
p
p <- plot_ly( x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar")
p
x <- list(
title = "x Axis",
titlefont = f
)
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "x Axis",
titlefont = f
)
y <- list(
title = "y Axis",
titlefont = f
)
p <- plot_ly( x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar") %>%
layout(xaxis = x, yaxis = y)
p
f <- list(
family = "Highest Cost Estimate",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Uber Options",
titlefont = f
)
y <- list(
title = "y Axis",
titlefont = f
)
p <- plot_ly( x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar") %>%
layout(xaxis = x, yaxis = y)
p
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Uber Options",
titlefont = f
)
y <- list(
title = "Highest Cost Estimate",
titlefont = f
)
p <- plot_ly( x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar") %>%
layout(xaxis = x, yaxis = y)
p
economics
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
mydata
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
mydata
economics
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
df
mydata
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
mydata
mydata
mydata[date]
mydata
mydata['date']
mydata
mydata['date']<-as.Date(mydata$data)
mydata
mydata['date']<-as.Date(mydata$date)
mydata
economics
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
mydata
mydata['date']<-as.Date(mydata$date)
mydata
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
mydata
mydata['date']<-as.Date(mydata$date)
mydata
#Line Chart
#Use Case - A rider decides to travel on all options available on an uber for five days each making it fifty days worth of travel.
#date= The date of the travel
#estimte = The approximate cost that he had to pay.
ggplot(mydata, aes(date, estimate)) + geom_line()
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
mydata
mydata['date']<-as.Date(mydata$date)
mydata
#Line Chart
#Use Case - A rider decides to travel on all options available on an uber for five days each making it fifty days worth of travel.
#date= The date of the travel
#estimte = The approximate cost that he had to pay.
ggplot(mydata, aes(date, estimate)) + geom_line()
#Area Chart
#Use Case - A rider decides to travel on all options available on an uber for five days each making it fifty days worth of travel.
#date= The date of the travel
#estimte = The approximate cost that he had to pay.
ggplot(df, aes(date, estimate)) + geom_area()
#Area Chart
#Use Case - A rider decides to travel on all options available on an uber for five days each making it fifty days worth of travel.
#date= The date of the travel
#estimte = The approximate cost that he had to pay.
ggplot(mydata, aes(date, estimate)) + geom_area()
#Scatter Plot
#Display_name = The name that get's displayed to the USer on the Uber App
#High_ estimte = The Hoghest Cost estimate that the user can be charged
ggplot(df, aes(display_name, high_estimate)) + geom_point()
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
library(ggplot2)
library(plotly)
library(ggmap)
#bar chart
#Display_name = The name that get's displayed to the USer on the Uber App
#High_ estimte = The Hoghest Cost estimate that the user can be charged
ggplot(df, aes(display_name,high_estimate)) + geom_bar(stat = "identity")  #count of models by manufacturer (rows)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
mydata['date']<-as.Date(mydata$date)
library(ggplot2)
library(plotly)
library(ggmap)
df
mydata
#Scatter Plot
#Display_name = The name that get's displayed to the USer on the Uber App
#High_ estimte = The Hoghest Cost estimate that the user can be charged
ggplot(df, aes(display_name, high_estimate)) + geom_point()
#text
#Display_name = The name that get's displayed to the USer on the Uber App
#High_ estimte = The Hoghest Cost estimate that the user can be charged
#The test shows the lowest to highest cost estimate for that ride.
ggplot(df, aes(display_name, high_estimate)) + geom_text(aes(label = estimate))
#bar chart
#Display_name = The name that get's displayed to the USer on the Uber App
#High_ estimte = The Hoghest Cost estimate that the user can be charged
ggplot(df, aes(display_name,high_estimate)) + geom_bar(stat = "identity")  #count of models by manufacturer (rows)
#Line Chart
#Use Case - A rider decides to travel on all options available on an uber for five days each making it fifty days worth of travel.
#date= The date of the travel
#estimte = The approximate cost that he had to pay.
ggplot(mydata, aes(date, estimate)) + geom_line()
#Area Chart
#Use Case - A rider decides to travel on all options available on an uber for five days each making it fifty days worth of travel.
#date= The date of the travel
#estimte = The approximate cost that he had to pay.
ggplot(mydata, aes(date, estimate)) + geom_area()
#Dot Plot
#high_estimte = The apprimate high costs available on the app.
#Count - How many time that High cost occurs
ggplot(df, aes(x = high_estimate)) + geom_dotplot(binwidth = 1)
#Histogram
#high_estimte = The apprimate high costs available on the app.
#Count - How many time that High cost occurs
ggplot(df, aes(x = high_estimate)) + geom_histogram(binwidth = 1)
#Frequency Polygon
#high_estimte = The apprimate high costs available on the app.
#Count - How many time that High cost occurs
ggplot(df, aes(x = high_estimate)) + geom_freqpoly(color = "blue")
#Box Plot
#name: The name of the option displayed on the app
#Estimate: The cost associated with that option. Range from lowest to highest cost estimate.
ggplot(mydata, aes(name, estimate)) + geom_boxplot()
#Violin Plot
#name: The name of the option displayed on the app
#Estimate: The cost associated with that option. Range from lowest to highest cost estimate.
#The shape remains the same as the data is evenly divided at a step of one and also with the same frequeny.
ggplot(mydata, aes(name, estimate)) + geom_violin()
#name: The name of the option displayed on the app
#low_estimate: The lowest cost associated with that option.
#high_estimate: The highest cost associated with that option.
ggplot(df, aes(high_estimate, low_estimate , color = display_name)) +
geom_point() +
facet_grid(cols=vars(display_name))+
theme(legend.position="none")
# GGMAP
#circle: Represents the start point, denoted at the start point lat and long UCLA
#rectangle: Represents the end point, denoted at the end point lat and long USC
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + geom_point(data = UCLA, aes(x = -118, y = 34), shape = 17, color="red", size=5, alpha=.5)
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Uber Options",
titlefont = f
)
y <- list(
title = "Highest Cost Estimate",
titlefont = f
)
p <- plot_ly( x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar") %>%
layout(xaxis = x, yaxis = y)
p
knitr::opts_chunk$set(echo = TRUE)
# Basic Plots
df <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber.csv")
mydata <- read.csv("C:/Users/anmol/Desktop/INF 554/Homework 10/r_assignement/data/uber_data1.csv")
mydata['date']<-as.Date(mydata$date)
library(ggplot2)
library(plotly)
library(ggmap)
df
mydata
#Scatter Plot
#Display_name = The name that get's displayed to the USer on the Uber App
#High_ estimte = The Hoghest Cost estimate that the user can be charged
ggplot(df, aes(display_name, high_estimate)) + geom_point()
#text
#Display_name = The name that get's displayed to the USer on the Uber App
#High_ estimte = The Hoghest Cost estimate that the user can be charged
#The test shows the lowest to highest cost estimate for that ride.
ggplot(df, aes(display_name, high_estimate)) + geom_text(aes(label = estimate))
#bar chart
#Display_name = The name that get's displayed to the USer on the Uber App
#High_ estimte = The Hoghest Cost estimate that the user can be charged
ggplot(df, aes(display_name,high_estimate)) + geom_bar(stat = "identity")  #count of models by manufacturer (rows)
#Line Chart
#Use Case - A rider decides to travel on all options available on an uber for five days each making it fifty days worth of travel.
#date= The date of the travel
#estimte = The approximate cost that he had to pay.
ggplot(mydata, aes(date, estimate)) + geom_line()
#Area Chart
#Use Case - A rider decides to travel on all options available on an uber for five days each making it fifty days worth of travel.
#date= The date of the travel
#estimte = The approximate cost that he had to pay.
ggplot(mydata, aes(date, estimate)) + geom_area()
#Dot Plot
#high_estimte = The apprimate high costs available on the app.
#Count - How many time that High cost occurs
ggplot(df, aes(x = high_estimate)) + geom_dotplot(binwidth = 1)
#Histogram
#high_estimte = The apprimate high costs available on the app.
#Count - How many time that High cost occurs
ggplot(df, aes(x = high_estimate)) + geom_histogram(binwidth = 1)
#Frequency Polygon
#high_estimte = The apprimate high costs available on the app.
#Count - How many time that High cost occurs
ggplot(df, aes(x = high_estimate)) + geom_freqpoly(color = "blue")
#Box Plot
#name: The name of the option displayed on the app
#Estimate: The cost associated with that option. Range from lowest to highest cost estimate.
ggplot(mydata, aes(name, estimate)) + geom_boxplot()
#Violin Plot
#name: The name of the option displayed on the app
#Estimate: The cost associated with that option. Range from lowest to highest cost estimate.
#The shape remains the same as the data is evenly divided at a step of one and also with the same frequeny.
ggplot(mydata, aes(name, estimate)) + geom_violin()
#name: The name of the option displayed on the app
#low_estimate: The lowest cost associated with that option.
#high_estimate: The highest cost associated with that option.
ggplot(df, aes(high_estimate, low_estimate , color = display_name)) +
geom_point() +
facet_grid(cols=vars(display_name))+
theme(legend.position="none")
# GGMAP
#circle: Represents the start point, denoted at the start point lat and long UCLA
#rectangle: Represents the end point, denoted at the end point lat and long USC
bb <- c(left = -125.39, bottom = 31.0, right = -113.5, top = 42.0)
stamenmap.ca <- get_stamenmap(bbox = bb, zoom = 6, maptype = "toner")
USC <- data.frame(label = "USC", lon = -120, lat = 35)
UCLA <- data.frame(label = "UCLA", lon = -118.44, lat = 34.07)
ggmap(stamenmap.ca) + geom_point(data = USC, aes(x = -120, y = 35), color="red", size=5, alpha=.5) + geom_point(data = UCLA, aes(x = -118, y = 34), shape = 17, color="red", size=5, alpha=.5)
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Uber Options",
titlefont = f
)
y <- list(
title = "Highest Cost Estimate",
titlefont = f
)
p <- plot_ly( x = df$display_name,y = c(df$high_estimate),name = "Uber",type = "bar") %>%
layout(xaxis = x, yaxis = y)
p
